import datetime

class Flight:
    def __init__(self, flight_id, destination, date, price, seats_available):
        self.flight_id = flight_id
        self.destination = destination
        self.date = date
        self.price = price  # Correct attribute name
        self.seats_available = seats_available

    def book_seat(self):
        if self.seats_available > 0:
            self.seats_available -= 1
            return True
        else:
            return False

    def __str__(self):
        return f"Flight ID: {self.flight_id} | Destination: {self.destination} | Date: {self.date} | Price: ${self.price} | Seats Available: {self.seats_available}"

class Booking:
    def __init__(self, booking_id, flight, passenger_name):
        self.booking_id = booking_id
        self.flight = flight
        self.passenger_name = passenger_name
        self.date_booked = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")

    def __str__(self):
        return f"Booking ID: {self.booking_id} | Passenger Name: {self.passenger_name} | Flight: {self.flight.destination} on {self.flight.date} | Date Booked: {self.date_booked}"

class FlightBookingApp:
    def __init__(self):
        self.flights = []
        self.bookings = []
        self.booking_id_counter = 1

    def add_sample_flights(self):
        self.flights.append(Flight(1, "Tutucorin", "2024-11-01", 300, 5))
        self.flights.append(Flight(2, "Coimbatore", "2024-11-05", 450, 3))
        self.flights.append(Flight(3, "Trichy", "2024-11-17", 500, 4))

    def display_flights(self):
        print("\nAvailable Flights:")
        for flight in self.flights:
            print(flight)

    def book_flight(self):
        self.display_flights()
        try:
            flight_id = int(input("\nEnter the Flight ID to Book: "))
            passenger_name = input("Enter your Name: ")
            flight = next((f for f in self.flights if f.flight_id == flight_id), None)
            if flight and flight.book_seat():
                booking = Booking(self.booking_id_counter, flight, passenger_name)
                self.bookings.append(booking)
                self.booking_id_counter += 1
                print(f"\nBooking successful! Your Booking ID is {booking.booking_id}.")
            else:
                print("\nBooking Failed. The flight may be fully booked or invalid Flight ID.")
        except ValueError:
            print("\nInvalid Flight ID. Please enter a numeric Flight ID.")

    def view_bookings(self):
        if not self.bookings:
            print("\nNo Bookings found.")
        else:
            print("\nYour Bookings:")
            for booking in self.bookings:
                print(booking)

    def start(self):
        self.add_sample_flights()
        while True:
            print("\n--- Flight Booking System ---")
            print("1. View Flights")
            print("2. Book a Flight")
            print("3. View My Bookings")
            print("4. Exit")
            choice = input("Enter your Choice: ")
            if choice == '1':
                self.display_flights()
            elif choice == '2':
                self.book_flight()
            elif choice == '3':
                self.view_bookings()
            elif choice == '4':
                print("Exiting the Booking Flight System. Thank you!")
                break
            else:
                print("Invalid choice. Please select a valid option.")

if __name__ == "__main__":
    app = FlightBookingApp()
    app.start()
